<policies>
    <inbound>
        <base />

        <!-- MCP Protocol Logging -->
        <log-to-eventhub logger-id="mcp-requests" partition-id="0">
            <message>
                @{
                    var requestBody = context.Request.Body?.As<string>(preserveContent: true);
                    return new JObject(
                        new JProperty("timestamp", DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")),
                        new JProperty("method", context.Request.Method),
                        new JProperty("url", context.Request.Url.ToString()),
                        new JProperty("headers", context.Request.Headers.ToDictionary(h => h.Key, h => string.Join(", ", h.Value))),
                        new JProperty("body", requestBody ?? ""),
                        new JProperty("clientIp", context.Request.IpAddress),
                        new JProperty("requestId", context.RequestId),
                        new JProperty("operationName", context.Operation?.Name),
                        new JProperty("api", context.Api?.Name)
                    ).ToString();
                }
            </message>
        </log-to-eventhub>

        <!-- Route to Real MCP Server -->
        <set-backend-service base-url="https://mcp-weather-1onhmd.purpleflower-1b791e7b.eastus.azurecontainerapps.io" />

        <!-- MCP Protocol Headers -->
        <set-header name="Content-Type" exists-action="override">
            <value>application/json</value>
        </set-header>
        <set-header name="Accept" exists-action="override">
            <value>application/json</value>
        </set-header>

        <!-- Request tracking headers -->
        <set-header name="X-Request-ID" exists-action="override">
            <value>@(context.RequestId)</value>
        </set-header>
        <set-header name="X-Forwarded-For" exists-action="override">
            <value>@(context.Request.IpAddress)</value>
        </set-header>

        <!-- CORS for MCP integration -->
        <cors allow-credentials="false">
            <allowed-origins>
                <origin>*</origin>
            </allowed-origins>
            <allowed-methods>
                <method>GET</method>
                <method>POST</method>
                <method>OPTIONS</method>
            </allowed-methods>
            <allowed-headers>
                <header>*</header>
            </allowed-headers>
        </cors>

        <!-- Rate limiting for monitoring -->
        <rate-limit calls="1000" renewal-period="60" />
        <quota calls="10000" renewal-period="86400" />

    </inbound>
    <backend>
        <base />
        <!-- Timeout for MCP operations with retry -->
        <timeout>30</timeout>
        <retry condition="@(context.Response.StatusCode >= 500)" count="3" interval="2" />
    </backend>
    <outbound>
        <base />

        <!-- Response logging -->
        <log-to-eventhub logger-id="mcp-responses" partition-id="1">
            <message>
                @{
                    var responseBody = context.Response.Body?.As<string>(preserveContent: true);
                    return new JObject(
                        new JProperty("timestamp", DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")),
                        new JProperty("requestId", context.RequestId),
                        new JProperty("statusCode", context.Response.StatusCode),
                        new JProperty("headers", context.Response.Headers.ToDictionary(h => h.Key, h => string.Join(", ", h.Value))),
                        new JProperty("body", responseBody ?? ""),
                        new JProperty("duration", context.Elapsed.TotalMilliseconds),
                        new JProperty("api", context.Api?.Name),
                        new JProperty("operation", context.Operation?.Name)
                    ).ToString();
                }
            </message>
        </log-to-eventhub>

        <!-- Ensure JSON response -->
        <set-header name="Content-Type" exists-action="override">
            <value>application/json; charset=utf-8</value>
        </set-header>

        <!-- Add monitoring headers -->
        <set-header name="X-MCP-Protocol-Version" exists-action="override">
            <value>2024-11-05</value>
        </set-header>
        <set-header name="X-Response-Time" exists-action="override">
            <value>@(context.Elapsed.TotalMilliseconds.ToString())ms</value>
        </set-header>
        <set-header name="X-Request-ID" exists-action="override">
            <value>@(context.RequestId)</value>
        </set-header>

    </outbound>
    <on-error>
        <base />

        <!-- Error logging -->
        <log-to-eventhub logger-id="mcp-errors" partition-id="2">
            <message>
                @{
                    return new JObject(
                        new JProperty("timestamp", DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")),
                        new JProperty("requestId", context.RequestId),
                        new JProperty("error", context.LastError?.Message ?? "Unknown error"),
                        new JProperty("source", context.LastError?.Source ?? ""),
                        new JProperty("reason", context.LastError?.Reason ?? ""),
                        new JProperty("scope", context.LastError?.Scope ?? ""),
                        new JProperty("section", context.LastError?.Section ?? ""),
                        new JProperty("api", context.Api?.Name),
                        new JProperty("operation", context.Operation?.Name)
                    ).ToString();
                }
            </message>
        </log-to-eventhub>

        <!-- MCP error handling -->
        <set-variable name="mcp-error" value="@{
            return new JObject(
                new JProperty(\"jsonrpc\", \"2.0\"),
                new JProperty(\"error\", new JObject(
                    new JProperty(\"code\", -32603),
                    new JProperty(\"message\", \"MCP Server Error\"),
                    new JProperty(\"data\", new JObject(
                        new JProperty(\"requestId\", context.RequestId),
                        new JProperty(\"timestamp\", DateTime.UtcNow.ToString(\"yyyy-MM-ddTHH:mm:ss.fffZ\"))
                    ))
                )),
                new JProperty(\"id\", null)
            ).ToString();
        }" />

        <return-response>
            <set-status code="500" reason="MCP Server Error" />
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-header name="X-Error-ID" exists-action="override">
                <value>@(context.RequestId)</value>
            </set-header>
            <set-body>@(context.Variables[\"mcp-error\"])</set-body>
        </return-response>
    </on-error>
</policies>